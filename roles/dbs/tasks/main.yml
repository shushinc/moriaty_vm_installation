---
- name: Update the package index on RHEL
  dnf:
    name: "*"
    state: latest
    update_cache: yes

- name: Install PHP and extensions on RHEL
  dnf:
    name:
      - php
      - php-cli
      - php-fpm
      - php-gd
      - php-mysqlnd
      - php-mbstring
      - php-json
      - php-common
      - php-dba
      - php-dbg
      - php-devel
      - php-bcmath
      - php-intl
      - php-ldap
      - php-opcache
      - php-pear
    state: present
    update_cache: yes
- name: Enable EPEL repository
  dnf:
    name: epel-release
    state: present

- name: Install Python 3
  dnf:
    name: python3
    state: present

- name: Install Python MySQL module
  dnf:
    name: python3-mysqlclient  # Change to the appropriate package if needed
    state: present

- name: Install pip for Python 3
  dnf:
    name: python3-pip
    state: present

# (Optional) PHP bits are not needed on a DB VM; remove if this is DB-only
- name: Install Python + tooling
  dnf:
    name:
      - epel-release
      - python3
      - python3-pip
      - python3-PyMySQL        # driver Ansible uses
      # - python3-mysqlclient  # not required by Ansible; PyMySQL is enough
    state: present


- name: Install MySQL server
  dnf:
    name: mysql-server
    state: present
    update_cache: yes

- name: Ensure MySQL service is enabled and running
  service:
    name: mysqld
    state: started
    enabled: yes

- name: Copy gzipped SQL dump to server (src is absolute path on controller)
  copy:
    src: "{{ role_path }}/templates/zcs_new.sql.gz"
    dest: "{{ sql_file_path }}.gz"
    mode: '0644'

- name: Unzip SQL file on server
  shell: gzip -d -f {{ sql_file_path }}.gz
  args:
    chdir: /


- name: Create MySQL database
  mysql_db:
    login_user: root
    name: "{{ db_name }}"
    state: present

- name: Create MySQL user with access to the database
  mysql_user:
    login_user: root
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    priv: "{{ db_name }}.*:ALL"
    state: present

- name: Allow {{ db_user }} from localhost
  community.mysql.mysql_user:
    name: "{{ db_user }}"
    host: "localhost"
    password: "{{ db_password }}"
    plugin: mysql_native_password   # FIX: was auth_plugin
    update_password: always
    priv: "{{ db_name }}.*:ALL"
    state: present
    login_user: root
    check_implicit_admin: true

# Grant from each inventory host (IP) â€” tighter than '%'
- name: Allow {{ db_user }} from each inventory host
  community.mysql.mysql_user:
    name: "{{ db_user }}"
    host: "{{ hostvars[item].ansible_host | default(item) }}"
    password: "{{ db_password }}"
    plugin: mysql_native_password
    update_password: always
    priv: "{{ db_name }}.*:ALL"
    state: present
    login_user: root
    check_implicit_admin: true
  loop: "{{ groups['all'] | difference(['localhost']) }}"


- name: Import SQL file into MySQL database
  shell: >
    mysql -u root {{ db_name }} < {{ sql_file_path }}
  args:
    chdir: /